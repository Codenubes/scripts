jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
       - id: admin
         password: admin123
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  maven:
    installations:
    - name: "maven"
      properties:
      - installSource:
          installers:
            - maven:
                id: "3.5.4"
unclassified:
  location:
    url: http://loclhost:8080/
  githubpluginconfig:
    configs:
      - name: "InHouse GitHub EE"
        apiUrl: "http://loclhost:80/"
        #credentialsId: "[GitHubEEUser]"
        manageHooks: true
  gitscm:
    globalConfigName: jenkins
    globalConfigEmail: jenkins@domain.local
    createAccountBasedOnEmail: true

jobs:
  - script: >
        job('Job-DSL-Hello-World-Job') {
            scm {
                git('git://github.com/oveits/java-maven-junit-helloworld')
            }
            triggers {
                scm('H/15 * * * *')
            }
            steps {
                maven('-e clean test')
            }
        }
  - script: >
      multibranchPipelineJob('configuration-as-code') {
          branchSources {
              git {
                  id = 'configuration-as-code'
                  remote('https://github.com/jenkinsci/configuration-as-code-plugin.git')
              }
          }
      }
  - script: >
      pipeline {
            agent any
            tools {
                maven 'maven'
            }
            stages {
                stage('Checkout') {
                    steps {
                        git url: 'https://github.com/piomin/sample-spring-boot-autoscaler.git', credentialsId: 'github-piomin', branch: 'master'
                    }
                }
                stage('Test') {
                    steps {
                        dir('example-service') {
                            sh 'mvn clean test'
                        }
                    }
                }
                stage('Build') {
                    steps {
                        dir('example-service') {
                            sh 'mvn clean install'
                        }
                    }
                }
            }
            post {
                always {
                    junit '**/target/reports/**/*.xml'
                }
            }
        }